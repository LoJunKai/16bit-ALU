/*
   This file was generated automatically by Alchitry Labs version 1.2.1.
   Do not edit this file directly. Instead edit the original Lucid source.
   This is a temporary file and any changes made to it will be destroyed.
*/

module shift16_20 (
    input [15:0] x,
    input [3:0] y,
    input [1:0] alufn,
    output reg [15:0] sh
  );
  
  
  
  wire [16-1:0] M_shl_sh;
  reg [16-1:0] M_shl_x;
  reg [4-1:0] M_shl_y;
  shiftleft16_27 shl (
    .x(M_shl_x),
    .y(M_shl_y),
    .sh(M_shl_sh)
  );
  
  wire [16-1:0] M_shr_sh;
  reg [16-1:0] M_shr_x;
  reg [4-1:0] M_shr_y;
  reg [1-1:0] M_shr_alufn1;
  shiftright16_28 shr (
    .x(M_shr_x),
    .y(M_shr_y),
    .alufn1(M_shr_alufn1),
    .sh(M_shr_sh)
  );
  
  always @* begin
    M_shl_x = x;
    M_shl_y = y;
    M_shr_x = x;
    M_shr_y = y;
    M_shr_alufn1 = alufn[1+0-:1];
    
    case (alufn[0+0-:1])
      1'h0: begin
        sh = M_shl_sh;
      end
      1'h1: begin
        sh = M_shr_sh;
      end
      default: begin
        sh = M_shl_sh;
      end
    endcase
  end
endmodule
